package ui.jp;

import ui.AbstractTableModelImpl;
import cs.Metaobject;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 * A JPanel where the user can check for null pointer error.
 */
public class NullPointerPanel extends javax.swing.JPanel {

    private final VarTextFieldDocumentListenerImpl vtfdli;
    private List<Map<String, String>> initialStates;

    /**
     * Creates new form NullPointerPanel
     */
    public NullPointerPanel() {
        vtfdli = new VarTextFieldDocumentListenerImpl();
        initialStates = new ArrayList<>();
        initialStates.add(new HashMap<>());
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        varList = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        initTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        constructList = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        addVarButton = new javax.swing.JButton();
        removeVarButton = new javax.swing.JButton();
        varTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        removeConstructButton = new javax.swing.JButton();
        addConstructButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        initTextField = new javax.swing.JTextField();
        removeInitButton = new javax.swing.JButton();
        addInitButton = new javax.swing.JButton();
        checkButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        varList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(varList);
        varList.setModel(new DefaultListModel<>());
        varList.addListSelectionListener(new VarListSelectionListenerImpl());

        jLabel1.setText("String instance variables");

        jLabel2.setText("Selected constructor: Initialisations");

        initTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        initTable.setModel(new ui.AbstractTableModelImpl(new Object[][]{}, new Object[]{"Name", "Value"}));
        jScrollPane3.setViewportView(initTable);
        (initTable.getSelectionModel()).addListSelectionListener(new InitTableListSelectionListenerImpl());

        jLabel3.setText("Constructors");

        constructList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(constructList);
        updateConstructList();
        constructList.setSelectedIndex(0);
        constructList.addListSelectionListener(new ConstructListSelectionListenerImpl());

        jLabel4.setText("Object-oriented class");

        addVarButton.setText("Add");
        addVarButton.setEnabled(false);

        removeVarButton.setText("Remove");
        removeVarButton.setEnabled(false);

        jLabel5.setText("Name");

        removeConstructButton.setText("Remove");
        removeConstructButton.setEnabled(false);

        addConstructButton.setText("Add");

        jLabel6.setText("Selected variable: Value: \"");

        initTextField.setEnabled(false);

        removeInitButton.setText("Remove");
        removeInitButton.setEnabled(false);

        addInitButton.setText("Add");
        addInitButton.setEnabled(false);

        checkButton.setText("Check");

        jLabel7.setText("\"");

        jLabel9.setText("//at some point in program, instantiate class and call string instance method on each variable");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addVarButton)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(varTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(removeVarButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(addConstructButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(removeConstructButton))
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(addInitButton)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(initTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(removeInitButton)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(checkButton))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(removeVarButton)
                            .addComponent(removeConstructButton)
                            .addComponent(addConstructButton)
                            .addComponent(removeInitButton))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(varTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addVarButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(initTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addInitButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkButton))
        );

        addVarButton.addActionListener(new AddVarButtonActionListenerImpl());
        removeVarButton.addActionListener(new RemoveVarButtonActionListenerImpl());
        (varTextField.getDocument()).addDocumentListener(vtfdli);
        removeConstructButton.addActionListener(new RemoveConstructButtonActionListenerImpl());
        addConstructButton.addActionListener(new AddConstructButtonActionListenerImpl());
        removeInitButton.addActionListener(new RemoveInitButtonActionListenerImpl());
        addInitButton.addActionListener(new AddInitButtonActionListenerImpl());
        checkButton.addActionListener(new CheckButtonActionListenerImpl(this));
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addConstructButton;
    private javax.swing.JButton addInitButton;
    private javax.swing.JButton addVarButton;
    private javax.swing.JButton checkButton;
    private javax.swing.JList<String> constructList;
    private javax.swing.JTable initTable;
    private javax.swing.JTextField initTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton removeConstructButton;
    private javax.swing.JButton removeInitButton;
    private javax.swing.JButton removeVarButton;
    private javax.swing.JList<String> varList;
    private javax.swing.JTextField varTextField;
    // End of variables declaration//GEN-END:variables

    private void updateAddVarButton() {
        String var = varTextField.getText();
        addVarButton.setEnabled(!(var.isEmpty() || ((DefaultListModel) varList.getModel()).contains(var)));
    }

    private void updateRemoveVarButton() {
        if (varList.isSelectionEmpty()) {
            removeVarButton.setEnabled(false);
        } else {
            boolean noConstructorInitialisesVar = true;

            for (Map<String, String> initialState : initialStates) {
                if (initialState.containsKey(varList.getSelectedValue())) {
                    noConstructorInitialisesVar = false;
                    break;
                }
            }

            removeVarButton.setEnabled(noConstructorInitialisesVar);
        }
    }

    private void updateAddInitButton() {
        addInitButton.setEnabled(!(varList.isSelectionEmpty() || constructList.isSelectionEmpty() || (initialStates.get(constructList.getSelectedIndex())).containsKey(varList.getSelectedValue())));
    }

    private void updateConstructList() {
        int numInitialStates = initialStates.size();
        String[] constructListData = new String[numInitialStates];

        for (int i = 0; i < numInitialStates; i++) {
            constructListData[i] = "c" + (i + 1);
        }

        constructList.setListData(constructListData);
    }

    private void updateInitTable() {
        int selectedIndex = constructList.getSelectedIndex();
        Object[] columnData = new Object[]{"Name", "Value"};
        Object[][] rowData;

        if (selectedIndex == -1) {
            rowData = new Object[][]{};
        } else {
            Map<String, String> initialState = initialStates.get(selectedIndex);
            int numInitialisations = initialState.size();
            rowData = new Object[numInitialisations][initTable.getColumnCount()];

            for (int i = 0; i < numInitialisations; i++) {
                rowData[i] = new Object[]{(String) (initialState.keySet()).toArray()[i], (String) (initialState.values()).toArray()[i]};
            }
        }

        initTable.setModel(new AbstractTableModelImpl(rowData, columnData));
    }

    private class AddVarButtonActionListenerImpl implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            ((DefaultListModel<String>) varList.getModel()).addElement(varTextField.getText());
            updateAddVarButton();
        }
    }

    private class RemoveVarButtonActionListenerImpl implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            ((DefaultListModel) varList.getModel()).remove(varList.getSelectedIndex());
            updateAddVarButton();
        }
    }

    private class AddConstructButtonActionListenerImpl implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            initialStates.add(new HashMap<>());
            updateConstructList();
        }
    }

    private class RemoveConstructButtonActionListenerImpl implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            initialStates.remove(constructList.getSelectedIndex());
            updateRemoveVarButton();
            updateConstructList();
        }
    }

    private class AddInitButtonActionListenerImpl implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            (initialStates.get(constructList.getSelectedIndex())).put(varList.getSelectedValue(), "\"" + initTextField.getText() + "\"");
            updateRemoveVarButton();
            updateAddInitButton();
            updateInitTable();
        }
    }

    private class RemoveInitButtonActionListenerImpl implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            int nameColumn = 0;
            (initialStates.get(constructList.getSelectedIndex())).remove((String) initTable.getValueAt(initTable.getSelectedRow(), nameColumn));
            updateRemoveVarButton();
            updateAddInitButton();
            updateInitTable();
        }
    }

    private class CheckButtonActionListenerImpl implements ActionListener {

        Component panel;

        CheckButtonActionListenerImpl(Component panel) {
            this.panel = panel;
        }

        @Override
        public void actionPerformed(ActionEvent e) {
            List<String> vars = new ArrayList<>();
            ListModel model = varList.getModel();

            for (int i = 0; i < model.getSize(); i++) {
                vars.add((String) model.getElementAt(i));
            }

            Metaobject metaobj = new Metaobject(vars, initialStates);
            List<String> uninitialisedVars = metaobj.getUninitialisedVars();

            if (uninitialisedVars.isEmpty()) {
                JOptionPane.showMessageDialog(panel, "Any variables that have been declared are initialised in all constructors (no null pointer error)");
            } else {
                String message = "The following variables aren't initialised in all constructors (null pointer error): " + uninitialisedVars.get(0);

                for (int i = 1; i < uninitialisedVars.size(); i++) {
                    message += ", " + uninitialisedVars.get(i);
                }

                message += "\nInitialise to an empty string?";

                if (JOptionPane.showConfirmDialog(panel, message, "Error check", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                    metaobj.addMissingInitialisations();
                    initialStates = metaobj.getInitialStates();
                    constructList.setSelectedIndex(0);
                    initTable.clearSelection();
                    updateConstructList();
                }
            }
        }
    }

    private class VarTextFieldDocumentListenerImpl implements DocumentListener {

        @Override
        public void insertUpdate(DocumentEvent e) {
            updateAddVarButton();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            updateAddVarButton();
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
            updateAddVarButton();
        }
    }

    private class VarListSelectionListenerImpl implements ListSelectionListener {

        @Override
        public void valueChanged(ListSelectionEvent e) {
            updateRemoveVarButton();
            updateAddInitButton();
            initTextField.setEnabled(!varList.isSelectionEmpty());
        }
    }

    private class ConstructListSelectionListenerImpl implements ListSelectionListener {

        @Override
        public void valueChanged(ListSelectionEvent e) {
            int minNumConstructs = 1;
            removeConstructButton.setEnabled(!(constructList.isSelectionEmpty() || initialStates.size() == minNumConstructs));
            updateAddInitButton();
            updateInitTable();
        }
    }

    private class InitTableListSelectionListenerImpl implements ListSelectionListener {

        @Override
        public void valueChanged(ListSelectionEvent e) {
            removeInitButton.setEnabled(!(initTable.getSelectionModel()).isSelectionEmpty());
        }
    }
}
